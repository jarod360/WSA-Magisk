name: Build WSA Magisk
on:
  schedule:
    - cron: "0 13 * * *"
  push:
    branches: [main]
  workflow_dispatch:
  repository_dispatch:
    types: [build]

concurrency: 
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build WSA
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64]
        release: [WIF]
        gapps: [OpenGApps]
        root: [magisk]
        compress-format: [zip]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: lzip patchelf e2fsprogs python3 python3-pip aria2 p7zip-full attr unzip sudo erofs-utils whiptail qemu-utils
          version: 1.0

      - name: Install venv & libraries for Python
        run: |
          python3 -c "import venv" >/dev/null 2>&1 || if ! (sudo apt-get install "python3-venv"); then abort; fi
          PYTHON_VENV_DIR="$(dirname "$PWD")/python3-env"
          [ -f "$PYTHON_VENV_DIR/bin/activate" ] || {
              python3 -m venv "$PYTHON_VENV_DIR"
          }
          source "$PYTHON_VENV_DIR"/bin/activate
          python3 -c "import pkg_resources; pkg_resources.require(open('requirements.txt',mode='r'))" &>/dev/null || {
              python3 -m pip install -r scripts/requirements.txt -q
          }
          deactivate

      - name: Grant executable permission
        run: chmod +x ./scripts/build.sh

      - name: Build WSA GAPPS ${{ matrix.root }} ${{ matrix.arch }}
        id: wsa
        run: ./scripts/build.sh --arch ${{ matrix.arch }} --release-type ${{ matrix.release }} --magisk-ver delta --gapps-brand ${{ matrix.gapps }} --root-sol ${{ matrix.root }} --remove-amazon --compress-format ${{ matrix.compress-format }}

      - name: Prepare release tag
        id: date
        run: echo "date=$(date +'v%Y-%m-%d')" >> "$GITHUB_OUTPUT"

      - name: Upload build to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./output/${{ steps.wsa.outputs.artifact }}.${{ matrix.compress-format }}
          tag: ${{ steps.date.outputs.date }}
          overwrite: true
          file_glob: true